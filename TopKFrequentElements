import java.util.*;
class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        int res[] = new int[k];
		Map<Integer,Integer> dataMap = new HashMap<>();
		for(int i=0;i<nums.length;i++) {
			if(dataMap.containsKey(nums[i])) {
				dataMap.put(nums[i], dataMap.get(nums[i])+1);
			}
			else {
				dataMap.put(nums[i], 1);
			}
		}
		Map<Integer, Integer> result = dataMap.entrySet()
                .stream()
                .sorted((Map.Entry.<Integer, Integer>comparingByValue().reversed()))
                .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, (e1, e2) -> e1, LinkedHashMap::new));
		//System.out.println(result);	
		int i=0;
		 for (Integer key : result.keySet()) {
			 
	            if(i==k) {
	            	break;
	            }
		 res[i]= key;
		 i++;
		 }
      return res;  
    }
}
