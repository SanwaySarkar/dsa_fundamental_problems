/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
       ListNode headFinal = new ListNode(1);
      ListNode headFinalr = headFinal;
    public ListNode addTwoNumbers(ListNode head1, ListNode head2) {
        Sum(head1,head2,0);
        return headFinalr.next;
    }
    
    public void Sum(ListNode head1, ListNode head2,int remainder){
        
        if(head1 == null && head2 == null){
             if(remainder!=0) {
                headFinal.next = new ListNode(remainder);
                headFinal = headFinal.next;
            }
            return;
        }
        int head1Data = 0; int head2Data =0;

        if(head1!=null) {
            head1Data = head1.val;
        }
        if(head2!=null) {
            head2Data = head2.val;
        }
        int result = (head1Data + head2Data+remainder)%10;
        ListNode tmp = new ListNode(result);
        headFinal.next = tmp;
        headFinal = headFinal.next;
        if((head1Data + head2Data +remainder)>=10) {
            remainder = (head1Data + head2Data + remainder)/10;
        }
        else {
            remainder =0;
        }
        if(head1!=null  && head2!=null )
            Sum(head1.next,head2.next,remainder);
        else if(head1==null  && head2!=null)
            Sum(null,head2.next,remainder);
        else if(head2==null  && head1!=null)
            Sum(head1.next,null,remainder);
        else{
            
            return;
        }
    }
}
